{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/wp.local/wp-next-headless-main/pages/[page].js\";\n//import Image from 'next/image'\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nconst Page = data => {\n  const router = useRouter();\n  const {\n    page\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page: \", page]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Page;\nexport async function getStaticPaths() {\n  const res = await fetch(\"http://wp.local/graphql\");\n  const data = await res.json();\n  const paths = data.map(curEle => {\n    return {\n      params: {\n        page: curEle.id.toString()\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false // false or 'blocking'\n\n  };\n}\n/*export async function getStaticProps(context) {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query getPage{\n                page( id: \"/about\", idType: URI ) {\n                  id\n                  databaseId\n                  title\n                  content\n                }\n              }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            page: json.data.page,\n        },\n    }\n\n}*/","map":{"version":3,"sources":["/var/www/wp.local/wp-next-headless-main/pages/[page].js"],"names":["Head","useRouter","Page","data","router","page","query","getStaticPaths","res","fetch","json","paths","map","curEle","params","id","toString","fallback"],"mappings":";;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAKA,MAAMC,IAAI,GAAIC,IAAD,IAAU;AACrB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAWD,MAAM,CAACE,KAAxB;AACA,sBAAQ;AAAA,4BACR,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADQ,eAIR;AAAA,2BAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAJQ;AAAA,kBAAR;AAOD,CAVD;;AAYA,eAAeH,IAAf;AAGA,OAAO,eAAeK,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yBAAD,CAAvB;AACA,QAAMN,IAAI,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAAnB;AAEA,QAAMC,KAAK,GAAGR,IAAI,CAACS,GAAL,CAAUC,MAAD,IAAW;AAC9B,WAAM;AACFC,MAAAA,MAAM,EAAC;AACHT,QAAAA,IAAI,EAAEQ,MAAM,CAACE,EAAP,CAAUC,QAAV;AADH;AADL,KAAN;AAKH,GANa,CAAd;AAOA,SAAO;AACLL,IAAAA,KADK;AAELM,IAAAA,QAAQ,EAAE,KAFL,CAEW;;AAFX,GAAP;AAID;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import Image from 'next/image'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\n\n\n\nconst Page = (data) => {\n  const router = useRouter()\n  const { page } = router.query;\n  return (<>\n  <Head>\n      <title>{page}</title>\n  </Head>\n  <p>Page: {page}</p>\n  </>\n  )\n}\n\nexport default Page\n\n\nexport async function getStaticPaths() {\n    const res = await fetch(\"http://wp.local/graphql\")\n    const data = await res.json();\n\n    const paths = data.map((curEle) =>{\n        return{\n            params:{\n                page: curEle.id.toString(),\n            }\n        }\n    })\n    return {\n      paths,\n      fallback: false // false or 'blocking'\n    };\n  }\n\n/*export async function getStaticProps(context) {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query getPage{\n                page( id: \"/about\", idType: URI ) {\n                  id\n                  databaseId\n                  title\n                  content\n                }\n              }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            page: json.data.page,\n        },\n    }\n\n}*/"]},"metadata":{},"sourceType":"module"}