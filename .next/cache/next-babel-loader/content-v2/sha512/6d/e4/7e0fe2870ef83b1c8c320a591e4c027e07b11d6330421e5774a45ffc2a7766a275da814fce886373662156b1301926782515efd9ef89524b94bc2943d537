{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/var/www/wp.local/wp-next-headless-main/pages/[page].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n//import Image from 'next/image'\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\n\nvar Page = function Page(data) {\n  _s();\n\n  var router = useRouter();\n  var page = router.query.page;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page: \", page]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Page, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Page;\nexport var __N_SSG = true;\nexport default Page;\n/*export async function getStaticProps(context) {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query getPage{\n                page( id: \"/about\", idType: URI ) {\n                  id\n                  databaseId\n                  title\n                  content\n                }\n              }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            page: json.data.page,\n        },\n    }\n\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/var/www/wp.local/wp-next-headless-main/pages/[page].js"],"names":["Head","useRouter","Page","data","router","page","query"],"mappings":";;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAU;AAAA;;AACrB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADqB,MAEbI,IAFa,GAEJD,MAAM,CAACE,KAFH,CAEbD,IAFa;AAGrB,sBAAQ;AAAA,4BACR,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADQ,eAIR;AAAA,2BAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,aAJQ;AAAA,kBAAR;AAOD,CAVD;;GAAMH,I;UACWD,S;;;KADXC,I;;AAYN,eAAeA,IAAf;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["//import Image from 'next/image'\nimport Head from 'next/head'\nimport { useRouter } from 'next/router'\n\n\n\n\nconst Page = (data) => {\n  const router = useRouter()\n  const { page } = router.query;\n  return (<>\n  <Head>\n      <title>{page}</title>\n  </Head>\n  <p>Page: {page}</p>\n  </>\n  )\n}\n\nexport default Page\n\n\nexport async function getStaticPaths() {\n    const res = await fetch(\"http://wp.local/wp-json/wp/v2/pages\")\n    const data = await res.json();\n\n    const paths = data.map((curEle) =>{\n        return{\n            params:{\n                page: curEle.id.toString(),\n            }\n        }\n    })\n    return {\n      paths,\n      fallback: false // false or 'blocking'\n    };\n  }\n\n/*export async function getStaticProps(context) {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query getPage{\n                page( id: \"/about\", idType: URI ) {\n                  id\n                  databaseId\n                  title\n                  content\n                }\n              }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            page: json.data.page,\n        },\n    }\n\n}*/"]},"metadata":{},"sourceType":"module"}