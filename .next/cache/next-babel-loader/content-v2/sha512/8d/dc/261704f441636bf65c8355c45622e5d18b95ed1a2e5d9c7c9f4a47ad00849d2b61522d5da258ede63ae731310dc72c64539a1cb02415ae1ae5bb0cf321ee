{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/wp.local/wp-next-headless-main/pages/[page].js\";\nimport Image from 'next/image';\nimport Head from 'next/head';\nexport default function Page(data) {\n  const page = data.page;\n  console.log(\"res\", page.featuredImage);\n  const ifImg = page.featuredImage;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: page.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: page.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), ifImg == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \" \"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Image, {\n      width: \"640\",\n      height: \"426\",\n      src: page.featuredImage.node.sourceUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      dangerouslySetInnerHTML: {\n        __html: page.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  const res = await fetch('http://wp.local/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n                query Singlepage($id: ID!, $idType: pageIdType!) {\n                    page(id: $id, idType: $idType) {\n                        title\n                        slug\n                        content\n                        \n                    }\n                }\n            `,\n      variables: {\n        id: context.params.slug,\n        idType: 'SLUG'\n      }\n    })\n  });\n  const json = await res.json();\n  return {\n    props: {\n      page: json.data.page\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const res = await fetch('http://wp.local/graphql', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: `\n            query AllpagesQuery {\n                pages {\n                    nodes {\n                        slug\n                        content\n                        title\n                        \n                    }\n                }\n            }\n        `\n    })\n  });\n  const json = await res.json();\n  const pages = json.data.pages.nodes;\n  const paths = pages.map(page => ({\n    params: {\n      slug: page.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/var/www/wp.local/wp-next-headless-main/pages/[page].js"],"names":["Image","Head","Page","data","page","console","log","featuredImage","ifImg","title","node","sourceUrl","__html","content","getStaticProps","context","res","fetch","method","headers","body","JSON","stringify","query","variables","id","params","slug","idType","json","props","getStaticPaths","pages","nodes","paths","map","fallback"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,eAAe,SAASC,IAAT,CAAeC,IAAf,EAAqB;AAEhC,QAAMC,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,IAAI,CAACG,aAAvB;AACA,QAAMC,KAAK,GAAGJ,IAAI,CAACG,aAAnB;AAEA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQH,IAAI,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAKI;AAAA,gBAAKL,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,YALJ,EAOMD,KAAK,IAAI,IAAV,gBAAkB;AAAA;AAAA,qBAAlB,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,KAAb;AAAmB,MAAA,MAAM,EAAC,KAA1B;AAAgC,MAAA,GAAG,EAAEJ,IAAI,CAACG,aAAL,CAAmBG,IAAnB,CAAwBC;AAA7D;AAAA;AAAA;AAAA;AAAA,YARN,eASI;AAAS,MAAA,uBAAuB,EAAE;AAACC,QAAAA,MAAM,EAAER,IAAI,CAACS;AAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE1C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFsC;AAG/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAV6B;AAWjBC,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAEV,OAAO,CAACW,MAAR,CAAeC,IADZ;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAXM,KAAf;AAHyC,GAA5B,CAAvB;AAqBA,QAAMC,IAAI,GAAG,MAAMb,GAAG,CAACa,IAAJ,EAAnB;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACH1B,MAAAA,IAAI,EAAEyB,IAAI,CAAC1B,IAAL,CAAUC;AADb;AADJ,GAAP;AAMH;AAED,OAAO,eAAe2B,cAAf,GAAgC;AAEnC,QAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,yBAAD,EAA4B;AAC/CC,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFsC;AAG/CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZ6B,KAAf;AAHyC,GAA5B,CAAvB;AAkBA,QAAMM,IAAI,GAAG,MAAMb,GAAG,CAACa,IAAJ,EAAnB;AACA,QAAMG,KAAK,GAAGH,IAAI,CAAC1B,IAAL,CAAU6B,KAAV,CAAgBC,KAA9B;AAEA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAW/B,IAAD,KAAW;AAC/BsB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEvB,IAAI,CAACuB;AAAb;AADuB,GAAX,CAAV,CAAd;AAIA,SAAO;AAAEO,IAAAA,KAAF;AAASE,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AAEH","sourcesContent":["import Image from 'next/image'\nimport Head from 'next/head'\nexport default function Page( data ){\n\n    const page = data.page;\n    console.log(\"res\",page.featuredImage);\n    const ifImg = page.featuredImage;\n   \n    return (\n        <div>\n        <Head>\n            <title>{page.title}</title>\n        </Head>\n        \n            <h1>{page.title}</h1>\n            \n            {(ifImg == null) ? <> </>\n            : <Image width=\"640\" height=\"426\" src={page.featuredImage.node.sourceUrl} /> }\n            <article dangerouslySetInnerHTML={{__html: page.content}}></article>\n        </div>\n    )\n\n}\n\nexport async function getStaticProps(context) {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n                query Singlepage($id: ID!, $idType: pageIdType!) {\n                    page(id: $id, idType: $idType) {\n                        title\n                        slug\n                        content\n                        \n                    }\n                }\n            `,\n            variables: {\n                id: context.params.slug,\n                idType: 'SLUG'\n            }\n        })\n    })\n\n    const json = await res.json()\n\n    return {\n        props: {\n            page: json.data.page,\n        },\n    }\n\n}\n\nexport async function getStaticPaths() {\n\n    const res = await fetch('http://wp.local/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query AllpagesQuery {\n                pages {\n                    nodes {\n                        slug\n                        content\n                        title\n                        \n                    }\n                }\n            }\n        `})\n    })\n\n    const json = await res.json()\n    const pages = json.data.pages.nodes;\n\n    const paths = pages.map((page) => ({\n        params: { slug: page.slug },\n    }))\n\n    return { paths, fallback: false }\n\n}\n"]},"metadata":{},"sourceType":"module"}