{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/wp.local/wp-next-headless-main/pages/[page].js\";\nimport Image from 'next/image';\nimport Head from 'next/head';\nexport var __N_SSG = true;\nexport default function MyPage(data) {\n  console.log(data.page);\n  var pdata = data.page;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: pdata.title.rendered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"sdxfb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: pdata.content.rendered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = MyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["/var/www/wp.local/wp-next-headless-main/pages/[page].js"],"names":["Image","Head","MyPage","data","console","log","page","pdata","title","rendered","content"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,eAAe,SAASC,MAAT,CAAiBC,IAAjB,EAAuB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACG,MAAMC,KAAK,GAAGJ,IAAI,CAACG,IAAnB;AAGC,sBACI;AAAA,4BACA,QAAC,IAAD;AAAA,6BACI;AAAA,kBAAQC,KAAK,CAACC,KAAN,CAAYC;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBAAIF,KAAK,CAACG,OAAN,CAAcD;AAAlB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;KAlBuBP,M","sourcesContent":["import Image from 'next/image'\nimport Head from 'next/head'\nexport default function MyPage( data ){\nconsole.log(data.page)\n   const pdata = data.page;\n    \n   \n    return (\n        <div>\n        <Head>\n            <title>{pdata.title.rendered}</title>\n        </Head>\n        \n            <h1>sdxfb</h1>\n            <p>{pdata.content.rendered}</p>\n            \n            \n        </div>\n    )\n\n}\n\nexport const getStaticPaths = async  () => {\nconst res = await fetch(`http://wp.local/wp-json/wp/v2/pages`)\n\n\nconst posts = await res.json()\n\n  // Get the paths we want to pre-render based on posts\n  const paths = posts.map((post) => ({\n    params: { page: post.id.toString() },\n  }))\n  console.log(\"path\",paths)\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return { paths, fallback: true }\n\n}\n\n\n// This also gets called at build time\nexport async function getStaticProps({ params }) {\n    const id = params.page;\n    console.log(\"param\",id)\n    // params contains the post `id`.\n    // If the route is like /posts/1, then params.id is 1\n    const res = await fetch(`http://wp.local/wp-json/wp/v2/pages/8`)\n    const page = await res.json()\n    //console.log(\"pid\",page)\n    // Pass post data to the page via props\n    return { props: { page } }\n  }"]},"metadata":{},"sourceType":"module"}