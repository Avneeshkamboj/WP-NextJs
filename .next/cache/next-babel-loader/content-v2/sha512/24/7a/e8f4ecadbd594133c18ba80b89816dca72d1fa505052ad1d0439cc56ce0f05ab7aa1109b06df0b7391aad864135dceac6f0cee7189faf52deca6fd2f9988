{"ast":null,"code":"import _defineProperty from \"/var/www/wp.local/wp-next-headless-main/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { configureStore } from '@reduxjs/toolkit'; // Or from '@reduxjs/toolkit/query/react'\n\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { postApi } from './menuSlice';\nexport var store = configureStore({\n  reducer: _defineProperty({}, postApi.reducerPath, postApi.reducer),\n  // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware().concat(postApi.middleware);\n  }\n}); // optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\n\nsetupListeners(store.dispatch);","map":{"version":3,"sources":["/var/www/wp.local/wp-next-headless-main/store/store.js"],"names":["configureStore","setupListeners","postApi","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat","dispatch"],"mappings":";AAAA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,IAAOC,KAAK,GAAGH,cAAc,CAAC;AACjCI,EAAAA,OAAO,sBAEFF,OAAO,CAACG,WAFN,EAEqBH,OAAO,CAACE,OAF7B,CAD0B;AAKhC;AACH;AACAE,EAAAA,UAAU,EAAE,oBAACC,oBAAD;AAAA,WACZA,oBAAoB,GAAGC,MAAvB,CAA8BN,OAAO,CAACI,UAAtC,CADY;AAAA;AAPuB,CAAD,CAA7B,C,CAWP;AACA;;AACAL,cAAc,CAACE,KAAK,CAACM,QAAP,CAAd","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\n// Or from '@reduxjs/toolkit/query/react'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { postApi } from './menuSlice'\n\nexport const  store = configureStore({\n    reducer:{\n         // Add the generated reducer as a specific top-level slice\n        [postApi.reducerPath] : postApi.reducer,\n    },\n     // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware().concat(postApi.middleware),\n})\n\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\nsetupListeners(store.dispatch)"]},"metadata":{},"sourceType":"module"}